gpasm-2.0.0_beta2 (Nov  6 2017)fsmul.asm          2018-1-12  10:31:15          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.1.0 (Dec 19 2017) (MINGW32)
                      00004 ; This file was generated Fri Jan 12 10:31:14 2018
                      00005 ;--------------------------------------------------------
                      00006 ; MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../../libsdcc_mc32l/fsmul.c"
                      00009         list    p=3316
                      00010         radix dec
                      00011         include "3316.inc"
                      00001                 LIST
                      00002 ;mc32p5314.inc    Standard Header File, Version 1.00 by Sinomcu
                      00772                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsdiv
                      00030         extern  ___fslt
                      00031         extern  ___fseq
                      00032         extern  ___fsneq
                      00033         extern  ___fsgt
                      00034         extern  __mullong
                      00035 
                      00036         extern STK06
                      00037         extern STK05
                      00038         extern STK04
                      00039         extern STK03
                      00040         extern STK02
                      00041         extern STK01
                      00042         extern STK00
                      00043 ;--------------------------------------------------------
                      00044 ; global declarations
                      00045 ;--------------------------------------------------------
                      00046         global  ___fsmul
                      00047 
                      00048 ;--------------------------------------------------------
                      00049 ; global definitions
                      00050 ;--------------------------------------------------------
                      00051 ;--------------------------------------------------------
                      00052 ; absolute symbol definitions
                      00053 ;--------------------------------------------------------
                      00054 ;--------------------------------------------------------
                      00055 ; compiler-defined variables
                      00056 ;--------------------------------------------------------
                      00057 UDL_fsmul_0     udata
0000                  00058 r0x100B res     1
0000                  00059 r0x100A res     1
0001                  00060 r0x1009 res     1
0001                  00061 r0x1008 res     1
0002                  00062 r0x100F res     1
0002                  00063 r0x100E res     1
0003                  00064 r0x100D res     1
0003                  00065 r0x100C res     1
0004                  00066 r0x1010 res     1
0004                  00067 r0x1011 res     1
0005                  00068 r0x1012 res     1
0005                  00069 r0x1013 res     1
0006                  00070 r0x1014 res     1
0006                  00071 r0x1015 res     1
0007                  00072 r0x1016 res     1
0007                  00073 r0x1017 res     1
0008                  00074 r0x1018 res     1
0008                  00075 r0x1019 res     1
0009                  00076 r0x101A res     1
0009                  00077 ___fsmul_fl1_1_22       res     4
000B                  00078 ___fsmul_fl2_1_22       res     4
                      00079 ;--------------------------------------------------------
                      00080 ; initialized data
                      00081 ;--------------------------------------------------------
                      00082 
                      00083 ;@Allocation info for local variables in function '__fsmul'
                      00084 ;@__fsmul __uchar2fs                Allocated to registers ;size:2
                      00085 ;@__fsmul __schar2fs                Allocated to registers ;size:2
                      00086 ;@__fsmul __uint2fs                 Allocated to registers ;size:2
                      00087 ;@__fsmul __sint2fs                 Allocated to registers ;size:2
                      00088 ;@__fsmul __ulong2fs                Allocated to registers ;size:2
                      00089 ;@__fsmul __slong2fs                Allocated to registers ;size:2
                      00090 ;@__fsmul __fs2uchar                Allocated to registers ;size:2
                      00091 ;@__fsmul __fs2schar                Allocated to registers ;size:2
                      00092 ;@__fsmul __fs2uint                 Allocated to registers ;size:2
                      00093 ;@__fsmul __fs2sint                 Allocated to registers ;size:2
                      00094 ;@__fsmul __fs2ulong                Allocated to registers ;size:2
                      00095 ;@__fsmul __fs2slong                Allocated to registers ;size:2
                      00096 ;@__fsmul __fsadd                   Allocated to registers ;size:2
                      00097 ;@__fsmul __fssub                   Allocated to registers ;size:2
                      00098 ;@__fsmul __fsdiv                   Allocated to registers ;size:2
                      00099 ;@__fsmul __fslt                    Allocated to registers ;size:2
                      00100 ;@__fsmul __fseq                    Allocated to registers ;size:2
                      00101 ;@__fsmul __fsneq                   Allocated to registers ;size:2
                      00102 ;@__fsmul __fsgt                    Allocated to registers ;size:2
                      00103 ;@__fsmul _mullong                  Allocated to registers ;size:2
                      00104 ;@__fsmul a2                        Allocated to registers r0x100F r0x100E r0x100D r0x100C ;size:4
                      00105 ;@__fsmul a1                        Allocated to registers r0x100B r0x100A r0x1009 r0x1008 ;size:4
                      00106 ;@__fsmul fl1                       Allocated to registers ;size:4
                      00107 ;@__fsmul fl2                       Allocated to registers ;size:4
                      00108 ;@__fsmul result                    Allocated to registers r0x100A r0x1009 r0x1008 r0x100F ;size:4
                      00109 ;@__fsmul exp                       Allocated to registers r0x100E r0x100D ;size:2
                      00110 ;@__fsmul sign                      Allocated to registers r0x100B ;size:1
                      00111 ;@end Allocation info for local variables in function '__fsmul';
                      00112 
                      00113 ;--------------------------------------------------------
                      00114 ; overlayable items in internal ram 
                      00115 ;--------------------------------------------------------
                      00116 ;       udata_ovr
                      00117 ;--------------------------------------------------------
                      00118 ; code
                      00119 ;--------------------------------------------------------
                      00120 code_fsmul      code
                      00121 ;***
                      00122 ;  pBlock Stats: dbName = C
                      00123 ;***
                      00124 ;entry:  ___fsmul       ;Function start
                      00125 ; 2 exit points
                      00126 ;has an exit
                      00127 ;functions called:
                      00128 ;   __mullong
                      00129 ;   __mullong
                      00130 ;   __mullong
                      00131 ;   __mullong
                      00132 ;   __mullong
                      00133 ;   __mullong
                      00134 ;26 compiler assigned registers:
                      00135 ;   r0x1008
                      00136 ;   STK00
                      00137 ;   r0x1009
                      00138 ;   STK01
                      00139 ;   r0x100A
                      00140 ;   STK02
                      00141 ;   r0x100B
                      00142 ;   STK03
                      00143 ;   r0x100C
                      00144 ;   STK04
                      00145 ;   r0x100D
                      00146 ;   STK05
                      00147 ;   r0x100E
                      00148 ;   STK06
                      00149 ;   r0x100F
                      00150 ;   r0x1010
                      00151 ;   r0x1011
                      00152 ;   r0x1012
                      00153 ;   r0x1013
                      00154 ;   r0x1014
                      00155 ;   r0x1015
                      00156 ;   r0x1016
                      00157 ;   r0x1017
                      00158 ;   r0x1018
                      00159 ;   r0x1019
                      00160 ;   r0x101A
                      00161 ;; Starting pCode block
                      00162 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:55:  _entry($14) :
                      00163 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:55:       proc ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0000                  00164 ___fsmul        ;Function start
                      00165 ; 2 exit points
                      00166 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
                      00167 ;       .line   55; "../../libsdcc_mc32l/fsmul.c"       float __fsmul (float a1, float a2) _FS_REENTRANT
0000   5600           00168         MOVRA   r0x1008
0001   5800           00169         MOVAR   STK00
0002   5600           00170         MOVRA   r0x1009
0003   5800           00171         MOVAR   STK01
0004   5600           00172         MOVRA   r0x100A
0005   5800           00173         MOVAR   STK02
0006   5600           00174         MOVRA   (___fsmul_fl1_1_22 + 0)
0007   5600           00175         MOVRA   r0x100B
                      00176 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
0008   5800           00177         MOVAR   STK03
0009   5600           00178         MOVRA   r0x100C
000A   5800           00179         MOVAR   STK04
000B   5600           00180         MOVRA   r0x100D
000C   5800           00181         MOVAR   STK05
000D   5600           00182         MOVRA   r0x100E
000E   5800           00183         MOVAR   STK06
000F   5600           00184         MOVRA   (___fsmul_fl2_1_22 + 0)
0010   5600           00185         MOVRA   r0x100F
                      00186 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:62:       iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00187 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:62:       *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00188 ;;gen.c:6374: size=3/4, offset=0, AOP_TYPE(res)=8
                      00189 ;;99    MOVAR   r0x100B
                      00190 ;;gen.c:6374: size=2/4, offset=1, AOP_TYPE(res)=8
                      00191 ;       .line   62; "../../libsdcc_mc32l/fsmul.c"       fl1.f = a1;
0011   5800           00192         MOVAR   r0x100A
0012   5600           00193         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00194 ;;gen.c:6374: size=1/4, offset=2, AOP_TYPE(res)=8
0013   5800           00195         MOVAR   r0x1009
0014   5600           00196         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00197 ;;gen.c:6374: size=0/4, offset=3, AOP_TYPE(res)=8
0015   5800           00198         MOVAR   r0x1008
0016   5600           00199         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00200 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:63:       iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00201 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:63:       *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsmul_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00202 ;;gen.c:6374: size=3/4, offset=0, AOP_TYPE(res)=8
                      00203 ;;125   MOVAR   r0x100F
                      00204 ;;gen.c:6374: size=2/4, offset=1, AOP_TYPE(res)=8
                      00205 ;       .line   63; "../../libsdcc_mc32l/fsmul.c"       fl2.f = a2;
0017   5800           00206         MOVAR   r0x100E
0018   5600           00207         MOVRA   (___fsmul_fl2_1_22 + 1)
                      00208 ;;gen.c:6374: size=1/4, offset=2, AOP_TYPE(res)=8
0019   5800           00209         MOVAR   r0x100D
001A   5600           00210         MOVRA   (___fsmul_fl2_1_22 + 2)
                      00211 ;;gen.c:6374: size=0/4, offset=3, AOP_TYPE(res)=8
001B   5800           00212         MOVAR   r0x100C
001C   5600           00213         MOVRA   (___fsmul_fl2_1_22 + 3)
                      00214 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:65:       iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00215 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:65:       iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00216 ;       .line   65; "../../libsdcc_mc32l/fsmul.c"       if (!fl1.l || !fl2.l)
001D   5800           00217         MOVAR   (___fsmul_fl1_1_22 + 0)
001E   5600           00218         MOVRA   r0x100B
001F   5800           00219         MOVAR   (___fsmul_fl1_1_22 + 1)
0020   5600           00220         MOVRA   r0x100A
0021   5800           00221         MOVAR   (___fsmul_fl1_1_22 + 2)
0022   5600           00222         MOVRA   r0x1009
0023   5800           00223         MOVAR   (___fsmul_fl1_1_22 + 3)
0024   5600           00224         MOVRA   r0x1008
                      00225 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:65:       if iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] == 0 goto _iftrue_0($1)
0025   5800           00226         MOVAR   r0x100B
0026   5C00           00227         ORAR    r0x100A
0027   5C00           00228         ORAR    r0x1009
0028   5C00           00229         ORAR    r0x1008
0029   F5B7           00230         JBCLR   PFLAG,2
002A   2000 2300      00231         LGOTO   _00105_DS_
                      00232 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:65:       iTemp9 [k18 lr12:13 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00233 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:65:       iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp9 [k18 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
002C   5800           00234         MOVAR   (___fsmul_fl2_1_22 + 0)
002D   5600           00235         MOVRA   r0x100B
002E   5800           00236         MOVAR   (___fsmul_fl2_1_22 + 1)
002F   5600           00237         MOVRA   r0x100A
0030   5800           00238         MOVAR   (___fsmul_fl2_1_22 + 2)
0031   5600           00239         MOVRA   r0x1009
0032   5800           00240         MOVAR   (___fsmul_fl2_1_22 + 3)
0033   5600           00241         MOVRA   r0x1008
                      00242 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:65:       if iTemp11 [k21 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] != 0 goto _iffalse_0($2)
0034   5800           00243         MOVAR   r0x100B
0035   5C00           00244         ORAR    r0x100A
0036   5C00           00245         ORAR    r0x1009
0037   5C00           00246         ORAR    r0x1008
0038   E5B7           00247         JBSET   PFLAG,2
0039   2000 2300      00248         LGOTO   _00106_DS_
                      00249 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:65:  _iftrue_0($1) :
                      00250 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:66:       ret 0 {float literal}
003B                  00251 _00105_DS_
                      00252 ;       .line   66; "../../libsdcc_mc32l/fsmul.c"       return (0);
003B   3C00           00253         MOVAI   0x00
003C   5600           00254         MOVRA   STK02
003D   3C00           00255         MOVAI   0x00
003E   5600           00256         MOVRA   STK01
003F   3C00           00257         MOVAI   0x00
0040   5600           00258         MOVRA   STK00
0041   3C00           00259         MOVAI   0x00
0042   2000 2300      00260         LGOTO   _00117_DS_
                      00261 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:66:  _iffalse_0($2) :
                      00262 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:69:       iTemp13 [k24 lr18:19 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00263 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:69:       iTemp15 [k27 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp13 [k24 lr18:19 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0044                  00264 _00106_DS_
                      00265 ;       .line   69; "../../libsdcc_mc32l/fsmul.c"       sign = SIGN (fl1.l) ^ SIGN (fl2.l);
0044   5800           00266         MOVAR   (___fsmul_fl1_1_22 + 0)
0045   5600           00267         MOVRA   r0x100B
0046   5800           00268         MOVAR   (___fsmul_fl1_1_22 + 1)
0047   5600           00269         MOVRA   r0x100A
0048   5800           00270         MOVAR   (___fsmul_fl1_1_22 + 2)
0049   5600           00271         MOVRA   r0x1009
004A   5800           00272         MOVAR   (___fsmul_fl1_1_22 + 3)
004B   5600           00273         MOVRA   r0x1008
                      00274 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:69:       iTemp16 [k28 lr20:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] = gabit iTemp15 [k27 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
004C   5800           00275         MOVAR   r0x1008
004D   3E80           00276         ANDAI   0x80
004E   E5B7           00277         JBSET   PFLAG,2
004F   3C01           00278         MOVAI   0x01
0050   5600           00279         MOVRA   r0x100F
                      00280 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:69:       iTemp17 [k29 lr21:22 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00281 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:69:       iTemp19 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp17 [k29 lr21:22 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0051   5800           00282         MOVAR   (___fsmul_fl2_1_22 + 0)
0052   5600           00283         MOVRA   r0x100B
0053   5800           00284         MOVAR   (___fsmul_fl2_1_22 + 1)
0054   5600           00285         MOVRA   r0x100A
0055   5800           00286         MOVAR   (___fsmul_fl2_1_22 + 2)
0056   5600           00287         MOVRA   r0x1009
0057   5800           00288         MOVAR   (___fsmul_fl2_1_22 + 3)
0058   5600           00289         MOVRA   r0x1008
                      00290 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:69:       iTemp20 [k33 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1005 ] = gabit iTemp19 [k32 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0059   5800           00291         MOVAR   r0x1008
005A   3E80           00292         ANDAI   0x80
005B   E5B7           00293         JBSET   PFLAG,2
005C   3C01           00294         MOVAI   0x01
005D   5600           00295         MOVRA   r0x100E
                      00296 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:69:       iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] = iTemp16 [k28 lr20:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1004 ] ^ iTemp20 [k33 lr23:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x1005 ]
005E   5800           00297         MOVAR   r0x100E
005F   4000           00298         XORAR   r0x100F
0060   5600           00299         MOVRA   r0x100B
                      00300 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:70:       iTemp23 [k37 lr26:27 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00301 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:70:       iTemp25 [k40 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp23 [k37 lr26:27 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00302 ;       .line   70; "../../libsdcc_mc32l/fsmul.c"       exp = EXP (fl1.l) - EXCESS;
0061   5800           00303         MOVAR   (___fsmul_fl1_1_22 + 0)
0062   5600           00304         MOVRA   r0x100A
0063   5800           00305         MOVAR   (___fsmul_fl1_1_22 + 1)
0064   5600           00306         MOVRA   r0x1009
0065   5800           00307         MOVAR   (___fsmul_fl1_1_22 + 2)
0066   5600           00308         MOVRA   r0x1008
0067   5800           00309         MOVAR   (___fsmul_fl1_1_22 + 3)
0068   5600           00310         MOVRA   r0x100F
                      00311 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:70:       iTemp26 [k41 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1005 r0x1006 r0x1007 r0x1008 ] = iTemp25 [k40 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x17 {const-unsigned-char literal}
0069   5000           00312         RLAR    r0x1008
006A   5000           00313         RLAR    r0x100F
006B   5600           00314         MOVRA   r0x100A
006C   5600           00315         MOVRA   r0x100E
006D   7600           00316         CLRR    r0x100D
006E   5200           00317         RLR     r0x100D
006F   7600           00318         CLRR    r0x100C
0070   7600           00319         CLRR    r0x1010
                      00320 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:70:       iTemp27 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp26 [k41 lr28:29 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1005 r0x1006 r0x1007 r0x1008 ] & 0xff {unsigned-long-int literal}
                      00321 ;;103   MOVAR   r0x100E
0071   7600           00322         CLRR    r0x1009
0072   7600           00323         CLRR    r0x1008
0073   7600           00324         CLRR    r0x100F
                      00325 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:70:       iTemp28 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp27 [k42 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] - 0x7e {unsigned-long-int literal}
0074   3C82           00326         MOVAI   0x82
0075   7E00           00327         ADDRA   r0x100A
0076   3CFF           00328         MOVAI   0xff
0077   E1B7           00329         JBSET   PFLAG,0
0078   7E00           00330         ADDRA   r0x1009
0079   3CFF           00331         MOVAI   0xff
007A   E1B7           00332         JBSET   PFLAG,0
007B   7E00           00333         ADDRA   r0x1008
007C   3CFF           00334         MOVAI   0xff
007D   E1B7           00335         JBSET   PFLAG,0
007E   7E00           00336         ADDRA   r0x100F
                      00337 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:70:       iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = (int fixed)iTemp28 [k43 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
007F   5800           00338         MOVAR   r0x100A
0080   5600           00339         MOVRA   r0x100E
0081   5800           00340         MOVAR   r0x1009
0082   5600           00341         MOVRA   r0x100D
                      00342 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:71:       iTemp30 [k45 lr33:34 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00343 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:71:       iTemp32 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp30 [k45 lr33:34 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00344 ;       .line   71; "../../libsdcc_mc32l/fsmul.c"       exp += EXP (fl2.l);
0083   5800           00345         MOVAR   (___fsmul_fl2_1_22 + 0)
0084   5600           00346         MOVRA   r0x100A
0085   5800           00347         MOVAR   (___fsmul_fl2_1_22 + 1)
0086   5600           00348         MOVRA   r0x1009
0087   5800           00349         MOVAR   (___fsmul_fl2_1_22 + 2)
0088   5600           00350         MOVRA   r0x1008
0089   5800           00351         MOVAR   (___fsmul_fl2_1_22 + 3)
008A   5600           00352         MOVRA   r0x100F
                      00353 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:71:       iTemp33 [k49 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp32 [k48 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x17 {const-unsigned-char literal}
008B   5000           00354         RLAR    r0x1008
008C   5000           00355         RLAR    r0x100F
008D   5600           00356         MOVRA   r0x100A
008E   5600           00357         MOVRA   r0x100C
008F   7600           00358         CLRR    r0x1010
0090   5200           00359         RLR     r0x1010
0091   7600           00360         CLRR    r0x1011
0092   7600           00361         CLRR    r0x1012
                      00362 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:71:       iTemp34 [k50 lr36:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp33 [k49 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
                      00363 ;;104   MOVAR   r0x100C
0093   7600           00364         CLRR    r0x1009
0094   7600           00365         CLRR    r0x1008
0095   7600           00366         CLRR    r0x100F
                      00367 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:71:       iTemp35 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = (unsigned-long-int fixed)iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ]
0096   5800           00368         MOVAR   r0x100E
0097   5600           00369         MOVRA   r0x100C
0098   5800           00370         MOVAR   r0x100D
0099   5600           00371         MOVRA   r0x1010
009A   3C00           00372         MOVAI   0x00
009B   FE00           00373         JBCLR   r0x1010,7
009C   3CFF           00374         MOVAI   0xff
009D   5600           00375         MOVRA   r0x1012
009E   5600           00376         MOVRA   r0x1011
                      00377 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:71:       iTemp36 [k52 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp35 [k51 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] + iTemp34 [k50 lr36:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
009F   5800           00378         MOVAR   r0x100A
00A0   7C00           00379         ADDAR   r0x100C
00A1   5600           00380         MOVRA   r0x100A
00A2   5800           00381         MOVAR   r0x1010
00A3   F1B7           00382         JBCLR   PFLAG,0
00A4   6000           00383         JZAR    r0x1010
00A5   7E00           00384         ADDRA   r0x1009
00A6   5800           00385         MOVAR   r0x1011
00A7   F1B7           00386         JBCLR   PFLAG,0
00A8   6000           00387         JZAR    r0x1011
00A9   7E00           00388         ADDRA   r0x1008
00AA   5800           00389         MOVAR   r0x1012
00AB   F1B7           00390         JBCLR   PFLAG,0
00AC   6000           00391         JZAR    r0x1012
00AD   7E00           00392         ADDRA   r0x100F
                      00393 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:71:       iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = (int fixed)iTemp36 [k52 lr38:39 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
00AE   5800           00394         MOVAR   r0x100A
00AF   5600           00395         MOVRA   r0x100E
00B0   5800           00396         MOVAR   r0x1009
00B1   5600           00397         MOVRA   r0x100D
                      00398 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:73:       iTemp38 [k54 lr41:46 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00399 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:73:       iTemp40 [k57 lr42:43 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00400 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:73:       iTemp42 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp40 [k57 lr42:43 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00401 ;       .line   73; "../../libsdcc_mc32l/fsmul.c"       fl1.l = MANT (fl1.l);
00B2   5800           00402         MOVAR   (___fsmul_fl1_1_22 + 0)
00B3   5600           00403         MOVRA   r0x100A
00B4   5800           00404         MOVAR   (___fsmul_fl1_1_22 + 1)
00B5   5600           00405         MOVRA   r0x1009
00B6   5800           00406         MOVAR   (___fsmul_fl1_1_22 + 2)
00B7   5600           00407         MOVRA   r0x1008
00B8   5800           00408         MOVAR   (___fsmul_fl1_1_22 + 3)
00B9   5600           00409         MOVRA   r0x100F
                      00410 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:73:       iTemp43 [k61 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp42 [k60 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x7fffff {unsigned-long-int literal}
00BA   DE00           00411         BCLR    r0x1008,7
00BB   7600           00412         CLRR    r0x100F
                      00413 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:73:       iTemp44 [k62 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp43 [k61 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] | 0x800000 {unsigned-long-int literal}
00BC   CE00           00414         BSET    r0x1008,7
                      00415 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:73:       *(iTemp38 [k54 lr41:46 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp44 [k62 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00416 ;;gen.c:6374: size=3/4, offset=0, AOP_TYPE(res)=8
00BD   5800           00417         MOVAR   r0x100A
00BE   5600           00418         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00419 ;;gen.c:6374: size=2/4, offset=1, AOP_TYPE(res)=8
00BF   5800           00420         MOVAR   r0x1009
00C0   5600           00421         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00422 ;;gen.c:6374: size=1/4, offset=2, AOP_TYPE(res)=8
00C1   5800           00423         MOVAR   r0x1008
00C2   5600           00424         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00425 ;;gen.c:6374: size=0/4, offset=3, AOP_TYPE(res)=8
00C3   3C00           00426         MOVAI   0x00
00C4   5600           00427         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00428 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:74:       iTemp45 [k63 lr47:52 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00429 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:74:       iTemp47 [k66 lr48:49 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00430 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:74:       iTemp49 [k69 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp47 [k66 lr48:49 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00431 ;       .line   74; "../../libsdcc_mc32l/fsmul.c"       fl2.l = MANT (fl2.l);
00C5   5800           00432         MOVAR   (___fsmul_fl2_1_22 + 0)
00C6   5600           00433         MOVRA   r0x100A
00C7   5800           00434         MOVAR   (___fsmul_fl2_1_22 + 1)
00C8   5600           00435         MOVRA   r0x1009
00C9   5800           00436         MOVAR   (___fsmul_fl2_1_22 + 2)
00CA   5600           00437         MOVRA   r0x1008
00CB   5800           00438         MOVAR   (___fsmul_fl2_1_22 + 3)
00CC   5600           00439         MOVRA   r0x100F
                      00440 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:74:       iTemp50 [k70 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp49 [k69 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x7fffff {unsigned-long-int literal}
00CD   DE00           00441         BCLR    r0x1008,7
00CE   7600           00442         CLRR    r0x100F
                      00443 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:74:       iTemp51 [k71 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp50 [k70 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ] | 0x800000 {unsigned-long-int literal}
00CF   CE00           00444         BSET    r0x1008,7
                      00445 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:74:       *(iTemp45 [k63 lr47:52 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp51 [k71 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00446 ;;gen.c:6374: size=3/4, offset=0, AOP_TYPE(res)=8
00D0   5800           00447         MOVAR   r0x100A
00D1   5600           00448         MOVRA   (___fsmul_fl2_1_22 + 0)
                      00449 ;;gen.c:6374: size=2/4, offset=1, AOP_TYPE(res)=8
00D2   5800           00450         MOVAR   r0x1009
00D3   5600           00451         MOVRA   (___fsmul_fl2_1_22 + 1)
                      00452 ;;gen.c:6374: size=1/4, offset=2, AOP_TYPE(res)=8
00D4   5800           00453         MOVAR   r0x1008
00D5   5600           00454         MOVRA   (___fsmul_fl2_1_22 + 2)
                      00455 ;;gen.c:6374: size=0/4, offset=3, AOP_TYPE(res)=8
00D6   3C00           00456         MOVAI   0x00
00D7   5600           00457         MOVRA   (___fsmul_fl2_1_22 + 3)
                      00458 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:77:       iTemp53 [k74 lr53:54 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00459 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:77:       iTemp55 [k77 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp53 [k74 lr53:54 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00460 ;       .line   77; "../../libsdcc_mc32l/fsmul.c"       result = (fl1.l >> 8) * (fl2.l >> 8);
00D8   5800           00461         MOVAR   (___fsmul_fl1_1_22 + 0)
00D9   5600           00462         MOVRA   r0x100A
00DA   5800           00463         MOVAR   (___fsmul_fl1_1_22 + 1)
00DB   5600           00464         MOVRA   r0x100C
00DC   5600           00465         MOVRA   r0x1009
00DD   5800           00466         MOVAR   (___fsmul_fl1_1_22 + 2)
00DE   5600           00467         MOVRA   r0x1010
00DF   5600           00468         MOVRA   r0x1008
00E0   5800           00469         MOVAR   (___fsmul_fl1_1_22 + 3)
00E1   5600           00470         MOVRA   r0x1011
00E2   5600           00471         MOVRA   r0x100F
                      00472 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:77:       iTemp56 [k78 lr55:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp55 [k77 lr54:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00473 ;;119   MOVAR   r0x1009
                      00474 ;;101   MOVAR   r0x1008
                      00475 ;;120   MOVAR   r0x100F
00E3   7600           00476         CLRR    r0x1012
                      00477 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:77:       iTemp57 [k79 lr56:57 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00478 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:77:       iTemp59 [k82 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = @[iTemp57 [k79 lr56:57 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
00E4   5800           00479         MOVAR   (___fsmul_fl2_1_22 + 0)
00E5   5600           00480         MOVRA   r0x100A
00E6   5800           00481         MOVAR   (___fsmul_fl2_1_22 + 1)
00E7   5600           00482         MOVRA   r0x1013
00E8   5600           00483         MOVRA   r0x1009
00E9   5800           00484         MOVAR   (___fsmul_fl2_1_22 + 2)
00EA   5600           00485         MOVRA   r0x1008
00EB   5800           00486         MOVAR   (___fsmul_fl2_1_22 + 3)
00EC   5600           00487         MOVRA   r0x1015
00ED   5600           00488         MOVRA   r0x100F
                      00489 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:77:       iTemp60 [k83 lr58:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp59 [k82 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00490 ;;100   MOVAR   r0x1009
                      00491 ;;124   MOVAR   r0x1008
                      00492 ;;102   MOVAR   r0x100F
00EE   7600           00493         CLRR    r0x1016
                      00494 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:77:       send iTemp56 [k78 lr55:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00495 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:77:       send iTemp60 [k83 lr58:60 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]{argreg = 1}
                      00496 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:77:       iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
00EF   5800           00497         MOVAR   r0x1013
00F0   5600           00498         MOVRA   STK06
                      00499 ;;123   MOVAR   r0x1014
00F1   5800           00500         MOVAR   r0x1008
00F2   5600           00501         MOVRA   r0x1014
00F3   5600           00502         MOVRA   STK05
00F4   5800           00503         MOVAR   r0x1015
00F5   5600           00504         MOVRA   STK04
00F6   3C00           00505         MOVAI   0x00
00F7   5600           00506         MOVRA   STK03
00F8   5800           00507         MOVAR   r0x100C
00F9   5600           00508         MOVRA   STK02
00FA   5800           00509         MOVAR   r0x1010
00FB   5600           00510         MOVRA   STK01
00FC   5800           00511         MOVAR   r0x1011
00FD   5600           00512         MOVRA   STK00
00FE   3C00           00513         MOVAI   0x00
00FF   2100 2300      00514         LCALL   __mullong
0101   5600           00515         MOVRA   r0x100F
0102   5800           00516         MOVAR   STK00
0103   5600           00517         MOVRA   r0x1008
0104   5800           00518         MOVAR   STK01
0105   5600           00519         MOVRA   r0x1009
0106   5800           00520         MOVAR   STK02
0107   5600           00521         MOVRA   r0x100A
                      00522 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       iTemp62 [k85 lr63:64 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00523 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       iTemp64 [k88 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = @[iTemp62 [k85 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00524 ;       .line   78; "../../libsdcc_mc32l/fsmul.c"       result += ((fl1.l & (unsigned long) 0xFF) * (fl2.l >> 8)) >> 8;
0108   5800           00525         MOVAR   (___fsmul_fl1_1_22 + 0)
0109   5600           00526         MOVRA   r0x100C
010A   5800           00527         MOVAR   (___fsmul_fl1_1_22 + 1)
010B   5600           00528         MOVRA   r0x1010
010C   5800           00529         MOVAR   (___fsmul_fl1_1_22 + 2)
010D   5600           00530         MOVRA   r0x1011
010E   5800           00531         MOVAR   (___fsmul_fl1_1_22 + 3)
010F   5600           00532         MOVRA   r0x1012
                      00533 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       iTemp65 [k89 lr65:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp64 [k88 lr64:65 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
0110   7600           00534         CLRR    r0x1010
0111   7600           00535         CLRR    r0x1011
0112   7600           00536         CLRR    r0x1012
                      00537 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       iTemp66 [k90 lr66:67 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00538 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       iTemp68 [k93 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = @[iTemp66 [k90 lr66:67 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0113   5800           00539         MOVAR   (___fsmul_fl2_1_22 + 0)
0114   5600           00540         MOVRA   r0x1013
0115   5800           00541         MOVAR   (___fsmul_fl2_1_22 + 1)
0116   5600           00542         MOVRA   r0x1014
0117   5800           00543         MOVAR   (___fsmul_fl2_1_22 + 2)
0118   5600           00544         MOVRA   r0x1015
0119   5800           00545         MOVAR   (___fsmul_fl2_1_22 + 3)
011A   5600           00546         MOVRA   r0x1016
                      00547 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       iTemp69 [k94 lr68:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ] = iTemp68 [k93 lr67:68 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] >> 0x8 {const-unsigned-char literal}
                      00548 ;;114   MOVAR   r0x1014
                      00549 ;;116   MOVAR   r0x1015
                      00550 ;;118   MOVAR   r0x1016
011B   7600           00551         CLRR    r0x101A
                      00552 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       send iTemp65 [k89 lr65:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00553 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       send iTemp69 [k94 lr68:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ]{argreg = 1}
                      00554 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       iTemp70 [k95 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
                      00555 ;;113   MOVAR   r0x1017
011C   5800           00556         MOVAR   r0x1014
011D   5600           00557         MOVRA   r0x1017
011E   5600           00558         MOVRA   STK06
                      00559 ;;115   MOVAR   r0x1018
011F   5800           00560         MOVAR   r0x1015
0120   5600           00561         MOVRA   r0x1018
0121   5600           00562         MOVRA   STK05
                      00563 ;;117   MOVAR   r0x1019
0122   5800           00564         MOVAR   r0x1016
0123   5600           00565         MOVRA   r0x1019
0124   5600           00566         MOVRA   STK04
0125   3C00           00567         MOVAI   0x00
0126   5600           00568         MOVRA   STK03
0127   5800           00569         MOVAR   r0x100C
0128   5600           00570         MOVRA   STK02
0129   3C00           00571         MOVAI   0x00
012A   5600           00572         MOVRA   STK01
012B   3C00           00573         MOVAI   0x00
012C   5600           00574         MOVRA   STK00
012D   3C00           00575         MOVAI   0x00
012E   2100 2300      00576         LCALL   __mullong
0130   5600           00577         MOVRA   r0x1015
0131   5600           00578         MOVRA   r0x1012
0132   5800           00579         MOVAR   STK00
0133   5600           00580         MOVRA   r0x1014
0134   5600           00581         MOVRA   r0x1011
0135   5800           00582         MOVAR   STK01
0136   5600           00583         MOVRA   r0x1010
0137   5800           00584         MOVAR   STK02
0138   5600           00585         MOVRA   r0x100C
                      00586 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       iTemp71 [k96 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp70 [k95 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] >> 0x8 {const-unsigned-char literal}
                      00587 ;;109   MOVAR   r0x1010
                      00588 ;;121   MOVAR   r0x1011
                      00589 ;;122   MOVAR   r0x1012
0139   7600           00590         CLRR    r0x1016
                      00591 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:78:       iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + iTemp71 [k96 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]
                      00592 ;;108   MOVAR   r0x1013
013A   5800           00593         MOVAR   r0x1010
013B   5600           00594         MOVRA   r0x1013
013C   7E00           00595         ADDRA   r0x100A
013D   5800           00596         MOVAR   r0x1014
013E   F1B7           00597         JBCLR   PFLAG,0
013F   6000           00598         JZAR    r0x1014
0140   7E00           00599         ADDRA   r0x1009
0141   5800           00600         MOVAR   r0x1015
0142   F1B7           00601         JBCLR   PFLAG,0
0143   6000           00602         JZAR    r0x1015
0144   7E00           00603         ADDRA   r0x1008
0145   5800           00604         MOVAR   r0x1016
0146   F1B7           00605         JBCLR   PFLAG,0
0147   6000           00606         JZAR    r0x1016
0148   7E00           00607         ADDRA   r0x100F
                      00608 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       iTemp73 [k98 lr75:76 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00609 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       iTemp75 [k101 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = @[iTemp73 [k98 lr75:76 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00610 ;       .line   79; "../../libsdcc_mc32l/fsmul.c"       result += ((fl2.l & (unsigned long) 0xFF) * (fl1.l >> 8)) >> 8;
0149   5800           00611         MOVAR   (___fsmul_fl2_1_22 + 0)
014A   5600           00612         MOVRA   r0x100C
014B   5800           00613         MOVAR   (___fsmul_fl2_1_22 + 1)
014C   5600           00614         MOVRA   r0x1010
014D   5800           00615         MOVAR   (___fsmul_fl2_1_22 + 2)
014E   5600           00616         MOVRA   r0x1011
014F   5800           00617         MOVAR   (___fsmul_fl2_1_22 + 3)
0150   5600           00618         MOVRA   r0x1012
                      00619 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       iTemp76 [k102 lr77:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp75 [k101 lr76:77 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] & 0xff {unsigned-long-int literal}
0151   7600           00620         CLRR    r0x1010
0152   7600           00621         CLRR    r0x1011
0153   7600           00622         CLRR    r0x1012
                      00623 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       iTemp77 [k103 lr78:79 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00624 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       iTemp79 [k106 lr79:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = @[iTemp77 [k103 lr78:79 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0154   5800           00625         MOVAR   (___fsmul_fl1_1_22 + 0)
0155   5600           00626         MOVRA   r0x1013
0156   5800           00627         MOVAR   (___fsmul_fl1_1_22 + 1)
0157   5600           00628         MOVRA   r0x1017
0158   5600           00629         MOVRA   r0x1014
0159   5800           00630         MOVAR   (___fsmul_fl1_1_22 + 2)
015A   5600           00631         MOVRA   r0x1018
015B   5600           00632         MOVRA   r0x1015
015C   5800           00633         MOVAR   (___fsmul_fl1_1_22 + 3)
015D   5600           00634         MOVRA   r0x1019
015E   5600           00635         MOVRA   r0x1016
                      00636 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       iTemp80 [k107 lr80:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ] = iTemp79 [k106 lr79:80 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] >> 0x8 {const-unsigned-char literal}
                      00637 ;;110   MOVAR   r0x1014
                      00638 ;;111   MOVAR   r0x1015
                      00639 ;;112   MOVAR   r0x1016
015F   7600           00640         CLRR    r0x101A
                      00641 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       send iTemp76 [k102 lr77:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]{argreg = 1}
                      00642 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       send iTemp80 [k107 lr80:82 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100F r0x1010 r0x1011 r0x1012 ]{argreg = 1}
                      00643 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       iTemp81 [k108 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] = call __mullong [k141 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{long-int function ( long-int fixed, long-int fixed) fixed}
0160   5800           00644         MOVAR   r0x1017
0161   5600           00645         MOVRA   STK06
0162   5800           00646         MOVAR   r0x1018
0163   5600           00647         MOVRA   STK05
0164   5800           00648         MOVAR   r0x1019
0165   5600           00649         MOVRA   STK04
0166   3C00           00650         MOVAI   0x00
0167   5600           00651         MOVRA   STK03
0168   5800           00652         MOVAR   r0x100C
0169   5600           00653         MOVRA   STK02
016A   3C00           00654         MOVAI   0x00
016B   5600           00655         MOVRA   STK01
016C   3C00           00656         MOVAI   0x00
016D   5600           00657         MOVRA   STK00
016E   3C00           00658         MOVAI   0x00
016F   2100 2300      00659         LCALL   __mullong
0171   5600           00660         MOVRA   r0x1015
0172   5600           00661         MOVRA   r0x1012
0173   5800           00662         MOVAR   STK00
0174   5600           00663         MOVRA   r0x1014
0175   5600           00664         MOVRA   r0x1011
0176   5800           00665         MOVAR   STK01
0177   5600           00666         MOVRA   r0x1013
0178   5600           00667         MOVRA   r0x1010
0179   5800           00668         MOVAR   STK02
017A   5600           00669         MOVRA   r0x100C
                      00670 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       iTemp82 [k109 lr84:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ] = iTemp81 [k108 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x1007 r0x1008 r0x1009 r0x100A ] >> 0x8 {const-unsigned-char literal}
                      00671 ;;105   MOVAR   r0x1010
                      00672 ;;106   MOVAR   r0x1011
                      00673 ;;107   MOVAR   r0x1012
017B   7600           00674         CLRR    r0x1016
                      00675 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:79:       iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + iTemp82 [k109 lr84:85 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-unsigned-long-int fixed}[r0x100B r0x100C r0x100D r0x100E ]
017C   5800           00676         MOVAR   r0x1013
017D   7E00           00677         ADDRA   r0x100A
017E   5800           00678         MOVAR   r0x1014
017F   F1B7           00679         JBCLR   PFLAG,0
0180   6000           00680         JZAR    r0x1014
0181   7E00           00681         ADDRA   r0x1009
0182   5800           00682         MOVAR   r0x1015
0183   F1B7           00683         JBCLR   PFLAG,0
0184   6000           00684         JZAR    r0x1015
0185   7E00           00685         ADDRA   r0x1008
0186   5800           00686         MOVAR   r0x1016
0187   F1B7           00687         JBCLR   PFLAG,0
0188   6000           00688         JZAR    r0x1016
0189   7E00           00689         ADDRA   r0x100F
                      00690 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:82:       iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + 0x40 {unsigned-long-int literal}
                      00691 ;       .line   82; "../../libsdcc_mc32l/fsmul.c"       result += 0x40;
018A   3C40           00692         MOVAI   0x40
018B   7E00           00693         ADDRA   r0x100A
018C   F1B7           00694         JBCLR   PFLAG,0
018D   6600           00695         INCR    r0x1009
018E   F5B7           00696         JBCLR   PFLAG,2
018F   6600           00697         INCR    r0x1008
0190   F5B7           00698         JBCLR   PFLAG,2
0191   6600           00699         INCR    r0x100F
                      00700 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:84:       iTemp85 [k112 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0x80000000 {unsigned-long-int literal}
                      00701 ;       .line   84; "../../libsdcc_mc32l/fsmul.c"       if (result & SIGNBIT)
0192   EE00           00702         JBSET   r0x100F,7
0193   2000 2300      00703         LGOTO   _00109_DS_
                      00704 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:84:       if iTemp85 [k112 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register} == 0 goto _iffalse_1($5)
                      00705 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:87:       iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] + 0x40 {unsigned-long-int literal}
                      00706 ;       .line   87; "../../libsdcc_mc32l/fsmul.c"       result += 0x40;
0195   3C40           00707         MOVAI   0x40
0196   7E00           00708         ADDRA   r0x100A
0197   F1B7           00709         JBCLR   PFLAG,0
0198   6600           00710         INCR    r0x1009
0199   F5B7           00711         JBCLR   PFLAG,2
019A   6600           00712         INCR    r0x1008
019B   F5B7           00713         JBCLR   PFLAG,2
019C   6600           00714         INCR    r0x100F
                      00715 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:88:       iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x8 {const-unsigned-char literal}
                      00716 ;       .line   88; "../../libsdcc_mc32l/fsmul.c"       result >>= 8;
019D   5800           00717         MOVAR   r0x1009
019E   5600           00718         MOVRA   r0x100A
019F   5800           00719         MOVAR   r0x1008
01A0   5600           00720         MOVRA   r0x1009
01A1   5800           00721         MOVAR   r0x100F
01A2   5600           00722         MOVRA   r0x1008
01A3   7600           00723         CLRR    r0x100F
                      00724 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:88:        goto _ifend_1($6)
01A4   2000 2300      00725         LGOTO   _00110_DS_
                      00726 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:88:  _iffalse_1($5) :
                      00727 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:92:       iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] >> 0x7 {const-unsigned-char literal}
01A6                  00728 _00109_DS_
                      00729 ;       .line   92; "../../libsdcc_mc32l/fsmul.c"       result >>= 7;
01A6   5000           00730         RLAR    r0x100A
01A7   5000           00731         RLAR    r0x1009
01A8   5600           00732         MOVRA   r0x100A
01A9   5000           00733         RLAR    r0x1008
01AA   5600           00734         MOVRA   r0x1009
01AB   5000           00735         RLAR    r0x100F
01AC   5600           00736         MOVRA   r0x1008
01AD   7600           00737         CLRR    r0x100F
01AE   5200           00738         RLR     r0x100F
                      00739 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:93:       iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] - 0x1 {const-unsigned-char literal}
                      00740 ;       .line   93; "../../libsdcc_mc32l/fsmul.c"       exp--;
01AF   3CFF           00741         MOVAI   0xff
01B0   7E00           00742         ADDRA   r0x100E
01B1   E1B7           00743         JBSET   PFLAG,0
01B2   6E00           00744         DECR    r0x100D
                      00745 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:93:  _ifend_1($6) :
                      00746 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:96:       iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ] & 0xff7fffff {unsigned-long-int literal}
01B3                  00747 _00110_DS_
                      00748 ;       .line   96; "../../libsdcc_mc32l/fsmul.c"       result &= ~HIDDEN;
01B3   DE00           00749         BCLR    r0x1008,7
                      00750 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:99:       iTemp92 [k119 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] < 0x100 {const-int literal}
                      00751 ;;signed compare: left < lit(0x100=256), size=2, mask=ffff
                      00752 ;       .line   99; "../../libsdcc_mc32l/fsmul.c"       if (exp >= 0x100)
01B4   5800           00753         MOVAR   r0x100D
01B5   3F80           00754         ADDAI   0x80
01B6   3F7F           00755         ADDAI   0x7f
01B7   E5B7           00756         JBSET   PFLAG,2
01B8   2000 2300      00757         LGOTO   _00135_DS_
01BA   3C00           00758         MOVAI   0x00
01BB   4800           00759         RSUBAR  r0x100E
01BC                  00760 _00135_DS_
01BC   E1B7           00761         JBSET   PFLAG,0
01BD   2000 2300      00762         LGOTO   _00115_DS_
                      00763 ;;genSkipc:3195: created from rifx:00DE608C
                      00764 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:99:       if iTemp92 [k119 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_3($11)
                      00765 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:      iTemp93 [k120 lr106:114 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00766 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:      if iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] == 0 goto iTempLbl0($15)
                      00767 ;       .line   100; "../../libsdcc_mc32l/fsmul.c"      fl1.l = (sign ? SIGNBIT : 0) | 0x7F800000;
01BF   3C00           00768         MOVAI   0x00
01C0   5C00           00769         ORAR    r0x100B
01C1   F5B7           00770         JBCLR   PFLAG,2
01C2   2000 2300      00771         LGOTO   _00119_DS_
                      00772 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:      iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] := 0x80000000 {unsigned-long-int literal}
01C4   7600           00773         CLRR    r0x100C
01C5   7600           00774         CLRR    r0x1010
01C6   7600           00775         CLRR    r0x1011
01C7   3C80           00776         MOVAI   0x80
01C8   5600           00777         MOVRA   r0x1012
                      00778 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:       goto iTempLbl1($16)
01C9   2000 2300      00779         LGOTO   _00120_DS_
                      00780 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:  iTempLbl0($15) :
                      00781 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:      iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] := 0x0 {unsigned-long-int literal}
01CB                  00782 _00119_DS_
01CB   7600           00783         CLRR    r0x100C
01CC   7600           00784         CLRR    r0x1010
01CD   7600           00785         CLRR    r0x1011
01CE   7600           00786         CLRR    r0x1012
                      00787 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:  iTempLbl1($16) :
                      00788 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:      iTemp96 [k124 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] = iTemp95 [k123 lr108:113 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ] | 0x7f800000 {unsigned-long-int literal}
01CF                  00789 _00120_DS_
01CF   CE00           00790         BSET    r0x1011,7
01D0   3C7F           00791         MOVAI   0x7f
01D1   5E00           00792         ORRA    r0x1012
                      00793 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:      *(iTemp93 [k120 lr106:114 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp96 [k124 lr113:114 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1007 r0x1008 r0x1009 r0x100A ]
                      00794 ;;gen.c:6374: size=3/4, offset=0, AOP_TYPE(res)=8
01D2   5800           00795         MOVAR   r0x100C
01D3   5600           00796         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00797 ;;gen.c:6374: size=2/4, offset=1, AOP_TYPE(res)=8
01D4   5800           00798         MOVAR   r0x1010
01D5   5600           00799         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00800 ;;gen.c:6374: size=1/4, offset=2, AOP_TYPE(res)=8
01D6   5800           00801         MOVAR   r0x1011
01D7   5600           00802         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00803 ;;gen.c:6374: size=0/4, offset=3, AOP_TYPE(res)=8
01D8   5800           00804         MOVAR   r0x1012
01D9   5600           00805         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00806 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:       goto _ifend_3($12)
01DA   2000 2300      00807         LGOTO   _00116_DS_
                      00808 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:100:  _iffalse_3($11) :
                      00809 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:101:      iTemp97 [k125 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ] < 0x0 {int literal}
                      00810 ;;signed compare: left < lit(0x0=0), size=2, mask=ffff
01DC                  00811 _00115_DS_
                      00812 ;       .line   101; "../../libsdcc_mc32l/fsmul.c"      else if (exp < 0)
01DC   C1B7           00813         BSET    PFLAG,0
01DD   EE00           00814         JBSET   r0x100D,7
01DE   D1B7           00815         BCLR    PFLAG,0
01DF   E1B7           00816         JBSET   PFLAG,0
01E0   2000 2300      00817         LGOTO   _00112_DS_
                      00818 ;;genSkipc:3195: created from rifx:00DE608C
                      00819 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:101:      if iTemp97 [k125 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($8)
                      00820 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:102:      iTemp98 [k126 lr119:120 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00821 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:102:      *(iTemp98 [k126 lr119:120 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := 0x0 {volatile-unsigned-long-int literal}
                      00822 ;;gen.c:6374: size=3/4, offset=0, AOP_TYPE(res)=8
                      00823 ;       .line   102; "../../libsdcc_mc32l/fsmul.c"      fl1.l = 0;
01E2   7600           00824         CLRR    (___fsmul_fl1_1_22 + 0)
                      00825 ;;gen.c:6374: size=2/4, offset=1, AOP_TYPE(res)=8
01E3   7600           00826         CLRR    (___fsmul_fl1_1_22 + 1)
                      00827 ;;gen.c:6374: size=1/4, offset=2, AOP_TYPE(res)=8
01E4   7600           00828         CLRR    (___fsmul_fl1_1_22 + 2)
                      00829 ;;gen.c:6374: size=0/4, offset=3, AOP_TYPE(res)=8
01E5   7600           00830         CLRR    (___fsmul_fl1_1_22 + 3)
                      00831 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:102:       goto _ifend_3($12)
01E6   2000 2300      00832         LGOTO   _00116_DS_
                      00833 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:102:  _iffalse_2($8) :
                      00834 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:      iTemp100 [k129 lr123:134 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00835 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:      if iTemp12 [k22 lr24:124 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ ___fsmul_sign_1_22}[r0x1000 ] == 0 goto iTempLbl2($17)
01E8                  00836 _00112_DS_
                      00837 ;       .line   104; "../../libsdcc_mc32l/fsmul.c"      fl1.l = PACK (sign ? SIGNBIT : 0 , exp, result);
01E8   3C00           00838         MOVAI   0x00
01E9   5C00           00839         ORAR    r0x100B
01EA   F5B7           00840         JBCLR   PFLAG,2
01EB   2000 2300      00841         LGOTO   _00121_DS_
                      00842 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:      iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] := 0x80000000 {unsigned-long-int literal}
01ED   7600           00843         CLRR    r0x100B
01EE   7600           00844         CLRR    r0x100C
01EF   7600           00845         CLRR    r0x1010
01F0   3C80           00846         MOVAI   0x80
01F1   5600           00847         MOVRA   r0x1011
                      00848 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:       goto iTempLbl3($18)
01F2   2000 2300      00849         LGOTO   _00122_DS_
                      00850 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:  iTempLbl2($17) :
                      00851 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:      iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] := 0x0 {unsigned-long-int literal}
01F4                  00852 _00121_DS_
01F4   7600           00853         CLRR    r0x100B
01F5   7600           00854         CLRR    r0x100C
01F6   7600           00855         CLRR    r0x1010
01F7   7600           00856         CLRR    r0x1011
                      00857 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:  iTempLbl3($18) :
                      00858 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:      iTemp103 [k133 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ] = (unsigned-long-int fixed)iTemp22 [k35 lr31:130 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{int fixed}{ sir@ ___fsmul_exp_1_22}[r0x1005 r0x1006 ]
01F8                  00859 _00122_DS_
01F8   5800           00860         MOVAR   r0x100E
01F9   5600           00861         MOVRA   r0x1012
01FA   5800           00862         MOVAR   r0x100D
01FB   5600           00863         MOVRA   r0x1013
01FC   3C00           00864         MOVAI   0x00
01FD   FE00           00865         JBCLR   r0x1013,7
01FE   3CFF           00866         MOVAI   0xff
01FF   5600           00867         MOVRA   r0x1015
0200   5600           00868         MOVRA   r0x1014
                      00869 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:      iTemp104 [k134 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1005 r0x1006 r0x100E r0x100F ] = iTemp103 [k133 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x100A r0x100B r0x100C r0x100D ] << 0x17 {const-unsigned-char literal}
0201   4C00           00870         RRAR    r0x1013
0202   4C00           00871         RRAR    r0x1012
0203   5600           00872         MOVRA   r0x1017
0204   7600           00873         CLRR    r0x1016
0205   4E00           00874         RRR     r0x1016
0206   7600           00875         CLRR    r0x100D
0207   7600           00876         CLRR    r0x100E
                      00877 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:      iTemp105 [k135 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1007 r0x1008 r0x1009 ] = iTemp102 [k132 lr125:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int register}[r0x1000 r0x1007 r0x1008 r0x1009 ] | iTemp104 [k134 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1005 r0x1006 r0x100E r0x100F ]
0208   3C00           00878         MOVAI   0x00
0209   5E00           00879         ORRA    r0x100B
020A   3C00           00880         MOVAI   0x00
020B   5E00           00881         ORRA    r0x100C
020C   5800           00882         MOVAR   r0x1016
020D   5E00           00883         ORRA    r0x1010
020E   5800           00884         MOVAR   r0x1017
020F   5E00           00885         ORRA    r0x1011
                      00886 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:      iTemp106 [k136 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ] = iTemp105 [k135 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1000 r0x1007 r0x1008 r0x1009 ] | iTemp52 [k72 lr61:133 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}{ sir@ ___fsmul_result_1_22}[r0x1001 r0x1002 r0x1003 r0x1004 ]
0210   5800           00887         MOVAR   r0x100B
0211   5E00           00888         ORRA    r0x100A
0212   5800           00889         MOVAR   r0x100C
0213   5E00           00890         ORRA    r0x1009
0214   5800           00891         MOVAR   r0x1010
0215   5E00           00892         ORRA    r0x1008
0216   5800           00893         MOVAR   r0x1011
0217   5E00           00894         ORRA    r0x100F
                      00895 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:      *(iTemp100 [k129 lr123:134 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-unsigned-long-int near* fixed}[remat]) := iTemp106 [k136 lr133:134 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x1001 r0x1002 r0x1003 r0x1004 ]
                      00896 ;;gen.c:6374: size=3/4, offset=0, AOP_TYPE(res)=8
0218   5800           00897         MOVAR   r0x100A
0219   5600           00898         MOVRA   (___fsmul_fl1_1_22 + 0)
                      00899 ;;gen.c:6374: size=2/4, offset=1, AOP_TYPE(res)=8
021A   5800           00900         MOVAR   r0x1009
021B   5600           00901         MOVRA   (___fsmul_fl1_1_22 + 1)
                      00902 ;;gen.c:6374: size=1/4, offset=2, AOP_TYPE(res)=8
021C   5800           00903         MOVAR   r0x1008
021D   5600           00904         MOVRA   (___fsmul_fl1_1_22 + 2)
                      00905 ;;gen.c:6374: size=0/4, offset=3, AOP_TYPE(res)=8
021E   5800           00906         MOVAR   r0x100F
021F   5600           00907         MOVRA   (___fsmul_fl1_1_22 + 3)
                      00908 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:104:  _ifend_3($12) :
                      00909 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:105:      iTemp107 [k137 lr136:137 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsmul_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00910 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:105:      iTemp109 [k140 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp107 [k137 lr136:137 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0220                  00911 _00116_DS_
                      00912 ;       .line   105; "../../libsdcc_mc32l/fsmul.c"      return (fl1.f);
0220   5800           00913         MOVAR   (___fsmul_fl1_1_22 + 0)
0221   5600           00914         MOVRA   r0x100B
0222   5800           00915         MOVAR   (___fsmul_fl1_1_22 + 1)
0223   5600           00916         MOVRA   r0x100A
0224   5800           00917         MOVAR   (___fsmul_fl1_1_22 + 2)
0225   5600           00918         MOVRA   r0x1009
0226   5800           00919         MOVAR   (___fsmul_fl1_1_22 + 3)
0227   5600           00920         MOVRA   r0x1008
                      00921 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:105:      ret iTemp109 [k140 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru1 dp0}{volatile-float fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ]
0228   5800           00922         MOVAR   r0x100B
0229   5600           00923         MOVRA   STK02
022A   5800           00924         MOVAR   r0x100A
022B   5600           00925         MOVRA   STK01
022C   5800           00926         MOVAR   r0x1009
022D   5600           00927         MOVRA   STK00
022E   5800           00928         MOVAR   r0x1008
                      00929 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:105:  _return($13) :
                      00930 ;;[ICODE] ../../libsdcc_mc32l/fsmul.c:105:      eproc ___fsmul [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{float function ( float fixed, float fixed) fixed}
022F                  00931 _00117_DS_
022F   000C           00932         RETURN  
                      00933 ; exit point of ___fsmul
                      00934 
                      00935 
                      00936 ;       code size estimation:
                      00937 ;         543+    0 =   543 instructions ( 1086 byte)
                      00938 
                      00939         end
gpasm-2.0.0_beta2 (Nov  6 2017)fsmul.asm          2018-1-12  10:31:15          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCHS0                            00000004
ADCHS1                            00000005
ADCHS2                            00000006
ADCHS3                            00000007
ADCKS0                            00000002
ADCKS1                            00000003
ADCR0                             000001E8
ADCR1                             000001E9
ADCR2                             000001EA
ADDRH                             000001EC
ADDRL                             000001ED
ADEOC                             00000001
ADIE                              00000007
ADIF                              00000007
ADIOS0                            00000000
ADIOS1                            00000001
ADIOS2                            00000002
ADIOS3                            00000003
ADIOS4                            00000004
ADIOS5                            00000005
ADIOS6                            00000006
ADIOS7                            00000007
ADON                              00000000
C                                 00000000
CLKS                              00000002
CSEL0                             00000000
CSEL1                             00000001
DC                                00000001
DKW                               000001F4
DKWE                              00000007
DKWP0                             000001C3
DRVS                              00000001
DSELEN                            00000000
FILS                              00000003
FLCD0                             00000000
FLCD1                             00000001
FPWMA0                            00000002
FPWMA1                            00000003
FPWMB0                            00000000
FPWMB1                            00000001
FPWMEN                            00000007
FPWMS                             00000004
FSEL0                             00000002
FSEL1                             00000003
FSR0                              000001B4
FSR00                             00000000
FSR01                             00000001
FSR02                             00000002
FSR03                             00000003
FSR04                             00000004
FSR05                             00000005
FSR06                             00000006
FSR07                             00000007
FSR1                              000001B5
FSR10                             00000000
FSR11                             00000001
FSR12                             00000002
FSR13                             00000003
FSR14                             00000004
FSR15                             00000005
FSR16                             00000006
FSR17                             00000007
GIE                               00000007
HFEN                              00000000
HIBYTE                            000001B3
HIBYTE0                           00000000
HIBYTE1                           00000001
HIBYTE2                           00000002
HIBYTE3                           00000003
HIBYTE4                           00000004
HIBYTE5                           00000005
HIBYTE6                           00000006
HIBYTE7                           00000007
INDF0                             000001B0
INDF00                            00000000
INDF01                            00000001
INDF02                            00000002
INDF03                            00000003
INDF04                            00000004
INDF05                            00000005
INDF06                            00000006
INDF07                            00000007
INDF1                             000001B1
INDF10                            00000000
INDF11                            00000001
INDF12                            00000002
INDF13                            00000003
INDF14                            00000004
INDF15                            00000005
INDF16                            00000006
INDF17                            00000007
INDF2                             000001B2
INDF20                            00000000
INDF21                            00000001
INDF22                            00000002
INDF23                            00000003
INDF24                            00000004
INDF25                            00000005
INDF26                            00000006
INDF27                            00000007
INDF3                             000001B9
INDF30                            00000000
INDF31                            00000001
INDF32                            00000002
INDF33                            00000003
INDF34                            00000004
INDF35                            00000005
INDF36                            00000006
INDF37                            00000007
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              000001BA
INTF                              000001BB
IOP0                              000001C0
IOP1                              000001C4
IOP2                              000001C8
IOP3                              000001CC
IOP4                              000001D0
IOP5                              000001D4
IRIN                              00000007
IROS                              00000006
IROT                              00000005
KBCR                              000001F5
KBCR0                             00000000
KBCR1                             00000001
KBCR2                             00000002
KBCR3                             00000003
KBCR4                             00000004
KBCR5                             00000005
KBCR6                             00000006
KBCR7                             00000007
KBIE                              00000004
KBIF                              00000004
LCDCKS                            00000002
LCDCR0                            000001F2
LCDCR1                            000001F3
LCDDRV                            000001F6
LCDDRVP06                         00000000
LCDDRVP22                         00000001
LCDDRVP23                         00000002
LCDDS00                           00000100
LCDDS01                           00000101
LCDDS02                           00000102
LCDDS03                           00000103
LCDDS04                           00000104
LCDDS05                           00000105
LCDDS06                           00000106
LCDDS07                           00000107
LCDDS08                           00000108
LCDDS09                           00000109
LCDDS10                           0000010A
LCDDS11                           0000010B
LCDDS12                           0000010C
LCDDS13                           0000010D
LCDDS14                           0000010E
LCDDS15                           0000010F
LCDDS16                           00000110
LCDDS17                           00000111
LCDDS18                           00000112
LCDDS19                           00000113
LCDDS20                           00000114
LCDDS21                           00000115
LCDDS22                           00000116
LCDDS23                           00000117
LCDDS24                           00000118
LCDDS25                           00000119
LCDDS26                           0000011A
LCDDS27                           0000011B
LCDDS28                           0000011C
LCDDS29                           0000011D
LCDDUTY                           00000004
LCDEN                             00000007
LCDIOSP1                          000001C7
LCDIOSP10                         00000000
LCDIOSP11                         00000001
LCDIOSP12                         00000002
LCDIOSP13                         00000003
LCDIOSP14                         00000004
LCDIOSP15                         00000005
LCDIOSP16                         00000006
LCDIOSP17                         00000007
LCDIOSP2                          000001CB
LCDIOSP20                         00000000
LCDIOSP21                         00000001
LCDIOSP22                         00000002
LCDIOSP23                         00000003
LCDIOSP24                         00000004
LCDIOSP25                         00000005
LCDIOSP26                         00000006
LCDIOSP27                         00000007
LCDIOSP3                          000001CF
LCDIOSP30                         00000000
LCDIOSP31                         00000001
LCDIOSP32                         00000002
LCDIOSP33                         00000003
LCDIOSP34                         00000004
LCDIOSP35                         00000005
LCDIOSP36                         00000006
LCDIOSP37                         00000007
LCDIOSP4                          000001D3
LCDIOSP40                         00000000
LCDIOSP41                         00000001
LCDIOSP42                         00000002
LCDIOSP43                         00000003
LCDIOSP44                         00000004
LCDIOSP45                         00000005
LCDIOSP46                         00000006
LCDIOSP47                         00000007
LCDIOSP5                          000001D7
LCDIOSP50                         00000000
LCDIOSP51                         00000001
LCDM                              00000003
LCDRS0                            00000000
LCDRS1                            00000001
LCDSP0                            00000005
LCDSP1                            00000006
LCDSPEED                          00000002
LFEN                              00000001
LPEN0                             00000000
LPEN1                             00000001
LPEN2                             00000002
LVDCR                             000001BD
LVDEN                             00000007
LVDF                              00000000
LVDIE                             00000005
LVDIF                             00000005
LVDS0                             00000003
LVDS1                             00000004
LVDS2                             00000005
LVDS3                             00000006
LXTCR                             000001BE
MCR                               000001B8
MINT00                            00000000
MINT01                            00000001
MINT10                            00000002
MINT11                            00000003
OEP0                              000001C1
OEP1                              000001C5
OEP2                              000001C9
OEP3                              000001CD
OEP4                              000001D1
OEP5                              000001D5
OPAE                              00000007
OPAM                              00000006
OPCR0                             000001F0
OPCR1                             000001F1
OPFC0                             00000000
OPFC1                             00000001
OPFC2                             00000002
OPFC3                             00000003
OPFC4                             00000004
OPFC5                             00000005
OSCM                              000001BC
P00D                              00000000
P00DKW                            00000000
P00OE                             00000000
P00PU                             00000000
P01D                              00000001
P01DKW                            00000001
P01OE                             00000001
P01PU                             00000001
P02D                              00000002
P02DKW                            00000002
P02OE                             00000002
P02PU                             00000002
P03D                              00000003
P03DKW                            00000003
P03OE                             00000003
P03PU                             00000003
P04D                              00000004
P04DKW                            00000004
P04OE                             00000004
P04PU                             00000004
P05D                              00000005
P05DKW                            00000005
P05OE                             00000005
P05PU                             00000005
P06D                              00000006
P06DKW                            00000006
P06OE                             00000006
P06PU                             00000006
P07D                              00000007
P07DKW                            00000007
P07OE                             00000007
P07PU                             00000007
P10D                              00000000
P10OE                             00000000
P10PU                             00000000
P11D                              00000001
P11OE                             00000001
P11PU                             00000001
P12D                              00000002
P12OE                             00000002
P12PU                             00000002
P13D                              00000003
P13OE                             00000003
P13PU                             00000003
P14D                              00000004
P14OE                             00000004
P14PU                             00000004
P15D                              00000005
P15OE                             00000005
P15PU                             00000005
P16D                              00000006
P16OE                             00000006
P16PU                             00000006
P17D                              00000007
P17OE                             00000007
P17PU                             00000007
P20D                              00000000
P20OE                             00000000
P20PU                             00000000
P21D                              00000001
P21OE                             00000001
P21PU                             00000001
P22D                              00000002
P22OE                             00000002
P22PU                             00000002
P23D                              00000003
P23OE                             00000003
P23PU                             00000003
P24D                              00000004
P24OE                             00000004
P24PU                             00000004
P25D                              00000005
P25OE                             00000005
P25PU                             00000005
P26D                              00000006
P26OE                             00000006
P26PU                             00000006
P27D                              00000007
P27OE                             00000007
P27PU                             00000007
P30D                              00000000
P30OE                             00000000
P30PU                             00000000
P31D                              00000001
P31OE                             00000001
P31PU                             00000001
P32D                              00000002
P32OE                             00000002
P32PU                             00000002
P33D                              00000003
P33OE                             00000003
P33PU                             00000003
P34D                              00000004
P34OE                             00000004
P34PU                             00000004
P35D                              00000005
P35OE                             00000005
P35PU                             00000005
P36D                              00000006
P36OE                             00000006
P36PU                             00000006
P37D                              00000007
P37OE                             00000007
P37PU                             00000007
P40D                              00000000
P40OE                             00000000
P40PU                             00000000
P41D                              00000001
P41OE                             00000001
P41PU                             00000001
P42D                              00000002
P42OE                             00000002
P42PU                             00000002
P43D                              00000003
P43OE                             00000003
P43PU                             00000003
P44D                              00000004
P44OE                             00000004
P44PU                             00000004
P45D                              00000005
P45OE                             00000005
P45PU                             00000005
P46D                              00000006
P46OE                             00000006
P46PU                             00000006
P47D                              00000007
P47OE                             00000007
P47PU                             00000007
P50D                              00000000
P50OE                             00000000
P50PU                             00000000
P51D                              00000001
P51OE                             00000001
P51PU                             00000001
P52D                              00000002
P52OE                             00000002
P52PU                             00000002
P53D                              00000003
P53OE                             00000003
P53PU                             00000003
P54D                              00000004
P54OE                             00000004
P55D                              00000005
P55OE                             00000005
P55PU                             00000005
PC0                               00000000
PC1                               00000001
PC2                               00000002
PC3                               00000003
PC4                               00000004
PC5                               00000005
PC6                               00000006
PC7                               00000007
PCL                               000001B6
PD                                00000004
PFLAG                             000001B7
PUP0                              000001C2
PUP1                              000001C6
PUP2                              000001CA
PUP3                              000001CE
PUP4                              000001D2
PUP5                              000001D6
PWMEN                             00000006
RSEL                              00000002
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0CR0                             000001D8
T0CR1                             000001D9
T0DATAH                           000001DE
T0DATAH0                          00000000
T0DATAH1                          00000001
T0DATAH2                          00000002
T0DATAH3                          00000003
T0DATAH4                          00000004
T0DATAH5                          00000005
T0DATAH6                          00000006
T0DATAH7                          00000007
T0DATAL                           000001DF
T0DATAL0                          00000000
T0DATAL1                          00000001
T0DATAL2                          00000002
T0DATAL3                          00000003
T0DATAL4                          00000004
T0DATAL5                          00000005
T0DATAL6                          00000006
T0DATAL7                          00000007
T0IE                              00000000
T0IF                              00000000
T0LATFH                           000001E2
T0LATFH0                          00000000
T0LATFH1                          00000001
T0LATFH2                          00000002
T0LATFH3                          00000003
T0LATFH4                          00000004
T0LATFH5                          00000005
T0LATFH6                          00000006
T0LATFH7                          00000007
T0LATFL                           000001E3
T0LATFL0                          00000000
T0LATFL1                          00000001
T0LATFL2                          00000002
T0LATFL3                          00000003
T0LATFL4                          00000004
T0LATFL5                          00000005
T0LATFL6                          00000006
T0LATFL7                          00000007
T0LATRH                           000001E0
T0LATRH0                          00000000
T0LATRH1                          00000001
T0LATRH2                          00000002
T0LATRH3                          00000003
T0LATRH4                          00000004
T0LATRH5                          00000005
T0LATRH6                          00000006
T0LATRH7                          00000007
T0LATRL                           000001E1
T0LATRL0                          00000000
T0LATRL1                          00000001
T0LATRL2                          00000002
T0LATRL3                          00000003
T0LATRL4                          00000004
T0LATRL5                          00000005
T0LATRL6                          00000006
T0LATRL7                          00000007
T0LOADH                           000001DC
T0LOADL                           000001DD
T0LOADL0                          00000000
T0LOADL1                          00000001
T0LOADL2                          00000002
T0LOADL3                          00000003
T0LOADL4                          00000004
T0LOADL5                          00000005
T0LOADL6                          00000006
T0LOADL7                          00000007
T0MOD0                            00000005
T0MOD1                            00000006
T0PR0                             00000000
T0PR1                             00000001
T0PR2                             00000002
T0PTS0                            00000003
T0PTS1                            00000004
T0RF                              00000006
T1CR                              000001E4
T1DATA                            000001E5
T1DATA0                           00000000
T1DATA1                           00000001
T1DATA2                           00000002
T1DATA3                           00000003
T1DATA4                           00000004
T1DATA5                           00000005
T1DATA6                           00000006
T1DATA7                           00000007
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001E6
T1LOAD0                           00000000
T1LOAD1                           00000001
T1LOAD2                           00000002
T1LOAD3                           00000003
T1LOAD4                           00000004
T1LOAD5                           00000005
T1LOAD6                           00000006
T1LOAD7                           00000007
T1MOD0                            00000005
T1MOD1                            00000006
T1PR0                             00000000
T1PR1                             00000001
T1PR2                             00000002
T1PTS0                            00000003
T1PTS1                            00000004
TC0EN                             00000007
TC1EN                             00000007
TO                                00000005
VDLSEL                            00000004
VLCDS                             00000003
VREFRES                           00000001
VREXT                             00000000
VSEL                              00000006
WSEL0                             00000003
WSEL1                             00000004
Z                                 00000002
_00105_DS_                        0000003B
_00106_DS_                        00000044
_00109_DS_                        000001A6
_00110_DS_                        000001B3
_00112_DS_                        000001E8
_00115_DS_                        000001DC
_00116_DS_                        00000220
_00117_DS_                        0000022F
_00119_DS_                        000001CB
_00120_DS_                        000001CF
_00121_DS_                        000001F4
_00122_DS_                        000001F8
_00135_DS_                        000001BC
_CONFIG0                          00008000
_CONFIG1                          00008001
__33P116                          00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fslt                           00000000
___fsmul                          00000000
___fsmul_fl1_1_22                 00000013
___fsmul_fl2_1_22                 00000017
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
__mullong                         00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
r0x1010                           00000008
r0x1011                           00000009
r0x1012                           0000000A
r0x1013                           0000000B
r0x1014                           0000000C
r0x1015                           0000000D
r0x1016                           0000000E
r0x1017                           0000000F
r0x1018                           00000010
r0x1019                           00000011
r0x101A                           00000012

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

