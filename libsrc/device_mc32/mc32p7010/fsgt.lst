gpasm-2.0.0_beta2 (Nov  6 2017)fsgt.asm           2018-1-12  10:28:23          PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SN-SDCC : SinoMCU ANSI-C Compiler
                      00003 ; Version 1.1.0 (Dec 19 2017) (MINGW32)
                      00004 ; This file was generated Fri Jan 12 10:28:22 2018
                      00005 ;--------------------------------------------------------
                      00006 ; MC32 port for the RISC core
                      00007 ;--------------------------------------------------------
                      00008 ;       .file   "../../libsdcc_mc32/fsgt.c"
                      00009         list    p=3221
                      00010         radix dec
                      00011         include "3221.inc"
                      00001                 LIST
                      00002 ;mc32p7010.inc    Standard Header File, Version 1.00 by Sinomcu
                      00435                 LIST
                      00012 ;--------------------------------------------------------
                      00013 ; external declarations
                      00014 ;--------------------------------------------------------
                      00015         extern  ___uchar2fs
                      00016         extern  ___schar2fs
                      00017         extern  ___uint2fs
                      00018         extern  ___sint2fs
                      00019         extern  ___ulong2fs
                      00020         extern  ___slong2fs
                      00021         extern  ___fs2uchar
                      00022         extern  ___fs2schar
                      00023         extern  ___fs2uint
                      00024         extern  ___fs2sint
                      00025         extern  ___fs2ulong
                      00026         extern  ___fs2slong
                      00027         extern  ___fsadd
                      00028         extern  ___fssub
                      00029         extern  ___fsmul
                      00030         extern  ___fsdiv
                      00031         extern  ___fslt
                      00032         extern  ___fseq
                      00033         extern  ___fsneq
                      00034 
                      00035         extern STK06
                      00036         extern STK05
                      00037         extern STK04
                      00038         extern STK03
                      00039         extern STK02
                      00040         extern STK01
                      00041         extern STK00
                      00042 ;--------------------------------------------------------
                      00043 ; global declarations
                      00044 ;--------------------------------------------------------
                      00045         global  ___fsgt
                      00046 
                      00047 ;--------------------------------------------------------
                      00048 ; global definitions
                      00049 ;--------------------------------------------------------
                      00050 ;--------------------------------------------------------
                      00051 ; absolute symbol definitions
                      00052 ;--------------------------------------------------------
                      00053 ;--------------------------------------------------------
                      00054 ; compiler-defined variables
                      00055 ;--------------------------------------------------------
                      00056 UDL_fsgt_0      udata
0000                  00057 r0x100B res     1
0000                  00058 r0x100A res     1
0001                  00059 r0x1009 res     1
0001                  00060 r0x1008 res     1
0002                  00061 r0x100F res     1
0002                  00062 r0x100E res     1
0003                  00063 r0x100D res     1
0003                  00064 r0x100C res     1
0004                  00065 r0x1010 res     1
0004                  00066 ___fsgt_fl1_1_22        res     4
0006                  00067 ___fsgt_fl2_1_22        res     4
                      00068 ;--------------------------------------------------------
                      00069 ; initialized data
                      00070 ;--------------------------------------------------------
                      00071 
                      00072 ;@Allocation info for local variables in function '__fsgt'
                      00073 ;@__fsgt __uchar2fs                Allocated to registers ;size:2
                      00074 ;@__fsgt __schar2fs                Allocated to registers ;size:2
                      00075 ;@__fsgt __uint2fs                 Allocated to registers ;size:2
                      00076 ;@__fsgt __sint2fs                 Allocated to registers ;size:2
                      00077 ;@__fsgt __ulong2fs                Allocated to registers ;size:2
                      00078 ;@__fsgt __slong2fs                Allocated to registers ;size:2
                      00079 ;@__fsgt __fs2uchar                Allocated to registers ;size:2
                      00080 ;@__fsgt __fs2schar                Allocated to registers ;size:2
                      00081 ;@__fsgt __fs2uint                 Allocated to registers ;size:2
                      00082 ;@__fsgt __fs2sint                 Allocated to registers ;size:2
                      00083 ;@__fsgt __fs2ulong                Allocated to registers ;size:2
                      00084 ;@__fsgt __fs2slong                Allocated to registers ;size:2
                      00085 ;@__fsgt __fsadd                   Allocated to registers ;size:2
                      00086 ;@__fsgt __fssub                   Allocated to registers ;size:2
                      00087 ;@__fsgt __fsmul                   Allocated to registers ;size:2
                      00088 ;@__fsgt __fsdiv                   Allocated to registers ;size:2
                      00089 ;@__fsgt __fslt                    Allocated to registers ;size:2
                      00090 ;@__fsgt __fseq                    Allocated to registers ;size:2
                      00091 ;@__fsgt __fsneq                   Allocated to registers ;size:2
                      00092 ;@__fsgt a2                        Allocated to registers r0x100F r0x100E r0x100D r0x100C ;size:4
                      00093 ;@__fsgt a1                        Allocated to registers r0x100B r0x100A r0x1009 r0x1008 ;size:4
                      00094 ;@__fsgt fl1                       Allocated to registers ;size:4
                      00095 ;@__fsgt fl2                       Allocated to registers ;size:4
                      00096 ;@end Allocation info for local variables in function '__fsgt';
                      00097 
                      00098 ;--------------------------------------------------------
                      00099 ; overlayable items in internal ram 
                      00100 ;--------------------------------------------------------
                      00101 ;       udata_ovr
                      00102 ;--------------------------------------------------------
                      00103 ; code
                      00104 ;--------------------------------------------------------
                      00105 code_fsgt       code
                      00106 ;***
                      00107 ;  pBlock Stats: dbName = C
                      00108 ;***
                      00109 ;entry:  ___fsgt        ;Function start
                      00110 ; 2 exit points
                      00111 ;has an exit
                      00112 ;16 compiler assigned registers:
                      00113 ;   r0x1008
                      00114 ;   STK00
                      00115 ;   r0x1009
                      00116 ;   STK01
                      00117 ;   r0x100A
                      00118 ;   STK02
                      00119 ;   r0x100B
                      00120 ;   STK03
                      00121 ;   r0x100C
                      00122 ;   STK04
                      00123 ;   r0x100D
                      00124 ;   STK05
                      00125 ;   r0x100E
                      00126 ;   STK06
                      00127 ;   r0x100F
                      00128 ;   r0x1010
                      00129 ;; Starting pCode block
                      00130 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:55:  _entry($9) :
                      00131 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:55:         proc ___fsgt [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0000                  00132 ___fsgt ;Function start
                      00133 ; 2 exit points
                      00134 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:55: iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsgt_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ] = recv ___fsgt [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
                      00135 ;       .line   55; "../../libsdcc_mc32/fsgt.c" char __fsgt (float a1, float a2) _FS_REENTRANT
0000   5600           00136         MOVRA   r0x1008
0001   5800           00137         MOVAR   STK00
0002   5600           00138         MOVRA   r0x1009
0003   5800           00139         MOVAR   STK01
0004   5600           00140         MOVRA   r0x100A
0005   5800           00141         MOVAR   STK02
0006   5600           00142         MOVRA   (___fsgt_fl1_1_22 + 0)
0007   5600           00143         MOVRA   r0x100B
                      00144 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:55: iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsgt_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ] = recv ___fsgt [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0008   5800           00145         MOVAR   STK03
0009   5600           00146         MOVRA   r0x100C
000A   5800           00147         MOVAR   STK04
000B   5600           00148         MOVRA   r0x100D
000C   5800           00149         MOVAR   STK05
000D   5600           00150         MOVRA   r0x100E
000E   5800           00151         MOVAR   STK06
000F   5600           00152         MOVRA   r0x100F
                      00153 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:59:         iTemp2 [k7 lr5:6 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsgt_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00154 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:59:         *(iTemp2 [k7 lr5:6 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp0 [k2 lr3:6 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsgt_a1_1_21}[r0x1000 r0x1001 r0x1002 r0x1003 ]
                      00155 ;;gen.c:6374: size=3/4, offset=0, AOP_TYPE(res)=8
                      00156 ;;99    MOVAR   r0x100B
                      00157 ;;gen.c:6374: size=2/4, offset=1, AOP_TYPE(res)=8
                      00158 ;       .line   59; "../../libsdcc_mc32/fsgt.c" fl1.f = a1;
0010   5800           00159         MOVAR   r0x100A
0011   5600           00160         MOVRA   (___fsgt_fl1_1_22 + 1)
                      00161 ;;gen.c:6374: size=1/4, offset=2, AOP_TYPE(res)=8
0012   5800           00162         MOVAR   r0x1009
0013   5600           00163         MOVRA   (___fsgt_fl1_1_22 + 2)
                      00164 ;;gen.c:6374: size=0/4, offset=3, AOP_TYPE(res)=8
0014   5800           00165         MOVAR   r0x1008
0015   5600           00166         MOVRA   (___fsgt_fl1_1_22 + 3)
                      00167 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:60:         iTemp4 [k11 lr7:8 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat] = &[___fsgt_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00168 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:60:         *(iTemp4 [k11 lr7:8 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-float near* fixed}[remat]) := iTemp1 [k4 lr4:8 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{float fixed}{ sir@ ___fsgt_a2_1_21}[r0x1004 r0x1005 r0x1006 r0x1007 ]
                      00169 ;;gen.c:6374: size=3/4, offset=0, AOP_TYPE(res)=8
                      00170 ;       .line   60; "../../libsdcc_mc32/fsgt.c" fl2.f = a2;
0016   5800           00171         MOVAR   r0x100F
0017   5600           00172         MOVRA   (___fsgt_fl2_1_22 + 0)
                      00173 ;;gen.c:6374: size=2/4, offset=1, AOP_TYPE(res)=8
0018   5800           00174         MOVAR   r0x100E
0019   5600           00175         MOVRA   (___fsgt_fl2_1_22 + 1)
                      00176 ;;gen.c:6374: size=1/4, offset=2, AOP_TYPE(res)=8
001A   5800           00177         MOVAR   r0x100D
001B   5600           00178         MOVRA   (___fsgt_fl2_1_22 + 2)
                      00179 ;;gen.c:6374: size=0/4, offset=3, AOP_TYPE(res)=8
001C   5800           00180         MOVAR   r0x100C
001D   5600           00181         MOVRA   (___fsgt_fl2_1_22 + 3)
                      00182 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:62:         iTemp6 [k14 lr9:10 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsgt_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00183 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:62:         iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp6 [k14 lr9:10 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00184 ;       .line   62; "../../libsdcc_mc32/fsgt.c" if (fl1.l<0 && fl2.l<0) {
001E   5800           00185         MOVAR   (___fsgt_fl1_1_22 + 0)
001F   5600           00186         MOVRA   r0x100B
0020   5800           00187         MOVAR   (___fsgt_fl1_1_22 + 1)
0021   5600           00188         MOVRA   r0x100A
0022   5800           00189         MOVAR   (___fsgt_fl1_1_22 + 2)
0023   5600           00190         MOVRA   r0x1009
0024   5800           00191         MOVAR   (___fsgt_fl1_1_22 + 3)
0025   5600           00192         MOVRA   r0x1008
                      00193 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:62:         iTemp9 [k18 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp8 [k17 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] < 0x0 {volatile-long-int literal}
                      00194 ;;signed compare: left < lit(0x0=0), size=4, mask=ffffffff
0026   C187           00195         BSET    PFLAG,0
0027   EE00           00196         JBSET   r0x1008,7
0028   D187           00197         BCLR    PFLAG,0
0029   E187           00198         JBSET   PFLAG,0
002A   A000           00199         GOTO    _00108_DS_
                      00200 ;;genSkipc:3195: created from rifx:00DE608C
                      00201 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:62:         if iTemp9 [k18 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_1($4)
                      00202 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:62:         iTemp10 [k19 lr13:14 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsgt_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00203 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:62:         iTemp12 [k22 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp10 [k19 lr13:14 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
002B   5800           00204         MOVAR   (___fsgt_fl2_1_22 + 0)
002C   5600           00205         MOVRA   r0x100B
002D   5800           00206         MOVAR   (___fsgt_fl2_1_22 + 1)
002E   5600           00207         MOVRA   r0x100A
002F   5800           00208         MOVAR   (___fsgt_fl2_1_22 + 2)
0030   5600           00209         MOVRA   r0x1009
0031   5800           00210         MOVAR   (___fsgt_fl2_1_22 + 3)
0032   5600           00211         MOVRA   r0x1008
                      00212 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:62:         iTemp13 [k23 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp12 [k22 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] < 0x0 {volatile-long-int literal}
                      00213 ;;signed compare: left < lit(0x0=0), size=4, mask=ffffffff
0033   C187           00214         BSET    PFLAG,0
0034   EE00           00215         JBSET   r0x1008,7
0035   D187           00216         BCLR    PFLAG,0
0036   E187           00217         JBSET   PFLAG,0
0037   A000           00218         GOTO    _00108_DS_
                      00219 ;;genSkipc:3195: created from rifx:00DE608C
                      00220 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:62:         if iTemp13 [k23 lr15:16 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_1($4)
                      00221 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:63:         iTemp14 [k24 lr17:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsgt_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00222 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:63:         iTemp16 [k27 lr18:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp14 [k24 lr17:18 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
                      00223 ;       .line   63; "../../libsdcc_mc32/fsgt.c" if (fl2.l > fl1.l)
0038   5800           00224         MOVAR   (___fsgt_fl2_1_22 + 0)
0039   5600           00225         MOVRA   r0x100B
003A   5800           00226         MOVAR   (___fsgt_fl2_1_22 + 1)
003B   5600           00227         MOVRA   r0x100A
003C   5800           00228         MOVAR   (___fsgt_fl2_1_22 + 2)
003D   5600           00229         MOVRA   r0x1009
003E   5800           00230         MOVAR   (___fsgt_fl2_1_22 + 3)
003F   5600           00231         MOVRA   r0x1008
                      00232 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:63:         iTemp17 [k28 lr19:20 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsgt_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00233 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:63:         iTemp19 [k31 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = @[iTemp17 [k28 lr19:20 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0040   5800           00234         MOVAR   (___fsgt_fl1_1_22 + 0)
0041   5600           00235         MOVRA   r0x100F
0042   5800           00236         MOVAR   (___fsgt_fl1_1_22 + 1)
0043   5600           00237         MOVRA   r0x100E
0044   5800           00238         MOVAR   (___fsgt_fl1_1_22 + 2)
0045   5600           00239         MOVRA   r0x100D
0046   5800           00240         MOVAR   (___fsgt_fl1_1_22 + 3)
0047   5600           00241         MOVRA   r0x100C
                      00242 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:63:         iTemp20 [k32 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp16 [k27 lr18:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] > iTemp19 [k31 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
0048   5800           00243         MOVAR   r0x100C
0049   3F80           00244         ADDAI   0x80
004A   5600           00245         MOVRA   r0x1010
004B   5800           00246         MOVAR   r0x1008
004C   3F80           00247         ADDAI   0x80
004D   4800           00248         RSUBAR  r0x1010
004E   E587           00249         JBSET   PFLAG,2
004F   A000           00250         GOTO    _00122_DS_
0050   5800           00251         MOVAR   r0x1009
0051   4800           00252         RSUBAR  r0x100D
0052   E587           00253         JBSET   PFLAG,2
0053   A000           00254         GOTO    _00122_DS_
0054   5800           00255         MOVAR   r0x100A
0055   4800           00256         RSUBAR  r0x100E
0056   E587           00257         JBSET   PFLAG,2
0057   A000           00258         GOTO    _00122_DS_
0058   5800           00259         MOVAR   r0x100B
0059   4800           00260         RSUBAR  r0x100F
005A                  00261 _00122_DS_
005A   F187           00262         JBCLR   PFLAG,0
005B   A000           00263         GOTO    _00106_DS_
                      00264 ;;genSkipc:3195: created from rifx:00DE608C
                      00265 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:63:         if iTemp20 [k32 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($2)
                      00266 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:64:         ret 0x1 {const-unsigned-char literal}
                      00267 ;       .line   64; "../../libsdcc_mc32/fsgt.c" return (1);
005C   3C01           00268         MOVAI   0x01
005D   A000           00269         GOTO    _00112_DS_
                      00270 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:64:  _iffalse_0($2) :
                      00271 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:65:         ret 0x0 {const-unsigned-char literal}
005E                  00272 _00106_DS_
                      00273 ;       .line   65; "../../libsdcc_mc32/fsgt.c" return (0);
005E   3C00           00274         MOVAI   0x00
005F   A000           00275         GOTO    _00112_DS_
                      00276 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:65:  _iffalse_1($4) :
                      00277 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:68:         iTemp21 [k33 lr27:28 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsgt_fl1_1_22 [k6 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00278 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:68:         iTemp23 [k36 lr28:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] = @[iTemp21 [k33 lr27:28 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0060                  00279 _00108_DS_
                      00280 ;       .line   68; "../../libsdcc_mc32/fsgt.c" if (fl1.l > fl2.l)
0060   5800           00281         MOVAR   (___fsgt_fl1_1_22 + 0)
0061   5600           00282         MOVRA   r0x100B
0062   5800           00283         MOVAR   (___fsgt_fl1_1_22 + 1)
0063   5600           00284         MOVRA   r0x100A
0064   5800           00285         MOVAR   (___fsgt_fl1_1_22 + 2)
0065   5600           00286         MOVRA   r0x1009
0066   5800           00287         MOVAR   (___fsgt_fl1_1_22 + 3)
0067   5600           00288         MOVRA   r0x1008
                      00289 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:68:         iTemp24 [k37 lr29:30 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] = &[___fsgt_fl2_1_22 [k10 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-struct float_long fixed}]
                      00290 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:68:         iTemp26 [k40 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ] = @[iTemp24 [k37 lr29:30 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{volatile-long-int near* fixed}[remat] + 0x0 {const-unsigned-char literal}]
0068   5800           00291         MOVAR   (___fsgt_fl2_1_22 + 0)
0069   5600           00292         MOVRA   r0x100F
006A   5800           00293         MOVAR   (___fsgt_fl2_1_22 + 1)
006B   5600           00294         MOVRA   r0x100E
006C   5800           00295         MOVAR   (___fsgt_fl2_1_22 + 2)
006D   5600           00296         MOVRA   r0x100D
006E   5800           00297         MOVAR   (___fsgt_fl2_1_22 + 3)
006F   5600           00298         MOVRA   r0x100C
                      00299 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:68:         iTemp27 [k41 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp23 [k36 lr28:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1000 r0x1001 r0x1002 r0x1003 ] > iTemp26 [k40 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{volatile-long-int fixed}[r0x1004 r0x1005 r0x1006 r0x1007 ]
0070   5800           00300         MOVAR   r0x100C
0071   3F80           00301         ADDAI   0x80
0072   5600           00302         MOVRA   r0x1010
0073   5800           00303         MOVAR   r0x1008
0074   3F80           00304         ADDAI   0x80
0075   4800           00305         RSUBAR  r0x1010
0076   E587           00306         JBSET   PFLAG,2
0077   A000           00307         GOTO    _00123_DS_
0078   5800           00308         MOVAR   r0x1009
0079   4800           00309         RSUBAR  r0x100D
007A   E587           00310         JBSET   PFLAG,2
007B   A000           00311         GOTO    _00123_DS_
007C   5800           00312         MOVAR   r0x100A
007D   4800           00313         RSUBAR  r0x100E
007E   E587           00314         JBSET   PFLAG,2
007F   A000           00315         GOTO    _00123_DS_
0080   5800           00316         MOVAR   r0x100B
0081   4800           00317         RSUBAR  r0x100F
0082                  00318 _00123_DS_
0082   F187           00319         JBCLR   PFLAG,0
0083   A000           00320         GOTO    _00111_DS_
                      00321 ;;genSkipc:3195: created from rifx:00DE608C
                      00322 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:68:         if iTemp27 [k41 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($7)
                      00323 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:69:         ret 0x1 {const-unsigned-char literal}
                      00324 ;       .line   69; "../../libsdcc_mc32/fsgt.c" return (1);
0084   3C01           00325         MOVAI   0x01
0085   A000           00326         GOTO    _00112_DS_
                      00327 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:69:  _iffalse_2($7) :
                      00328 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:70:         ret 0x0 {const-unsigned-char literal}
0086                  00329 _00111_DS_
                      00330 ;       .line   70; "../../libsdcc_mc32/fsgt.c" return (0);
0086   3C00           00331         MOVAI   0x00
                      00332 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:70:  _return($8) :
                      00333 ;;[ICODE] ../../libsdcc_mc32/fsgt.c:70:         eproc ___fsgt [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char function ( float fixed, float fixed) fixed}
0087                  00334 _00112_DS_
0087   000C           00335         RETURN  
                      00336 ; exit point of ___fsgt
                      00337 
                      00338 
                      00339 ;       code size estimation:
                      00340 ;         136+    0 =   136 instructions (  272 byte)
                      00341 
                      00342         end
gpasm-2.0.0_beta2 (Nov  6 2017)fsgt.asm           2018-1-12  10:28:23          PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

ADCHS0                            00000004
ADCHS1                            00000005
ADCHS2                            00000006
ADCHS3                            00000007
ADCKS0                            00000002
ADCKS1                            00000003
ADCR0                             000001B0
ADCR1                             000001B1
ADEOC                             00000001
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADR0                              00000000
ADR1                              00000001
ADR10                             00000006
ADR11                             00000007
ADR2                              00000002
ADR3                              00000003
ADR4                              00000000
ADR5                              00000001
ADR6                              00000002
ADR7                              00000003
ADR8                              00000004
ADR9                              00000005
ADRH                              000001B4
ADRL                              000001B5
ANSEL                             00000193
BUZ0OE                            00000005
BUZ1OE                            00000005
C                                 00000000
CLKS                              00000002
DC                                00000001
FSR0                              00000184
FSR00                             00000000
FSR01                             00000001
FSR02                             00000002
FSR03                             00000003
FSR04                             00000004
FSR05                             00000005
FSR06                             00000006
FSR07                             00000007
FSR1                              00000185
FSR10                             00000000
FSR11                             00000001
FSR12                             00000002
FSR13                             00000003
FSR14                             00000004
FSR15                             00000005
FSR16                             00000006
FSR17                             00000007
GIE                               00000007
HFEN                              00000000
HIBYTE                            00000183
HIBYTE0                           00000000
HIBYTE1                           00000001
HIBYTE2                           00000002
HIBYTE3                           00000003
HIBYTE4                           00000004
HIBYTE5                           00000005
HIBYTE6                           00000006
HIBYTE7                           00000007
INDF0                             00000180
INDF00                            00000000
INDF01                            00000001
INDF02                            00000002
INDF03                            00000003
INDF04                            00000004
INDF05                            00000005
INDF06                            00000006
INDF07                            00000007
INDF1                             00000181
INDF10                            00000000
INDF11                            00000001
INDF12                            00000002
INDF13                            00000003
INDF14                            00000004
INDF15                            00000005
INDF16                            00000006
INDF17                            00000007
INDF2                             00000182
INDF20                            00000000
INDF21                            00000001
INDF22                            00000002
INDF23                            00000003
INDF24                            00000004
INDF25                            00000005
INDF26                            00000006
INDF27                            00000007
INDF3                             00000189
INDF30                            00000000
INDF31                            00000001
INDF32                            00000002
INDF33                            00000003
INDF34                            00000004
INDF35                            00000005
INDF36                            00000006
INDF37                            00000007
INT0IE                            00000002
INT0IF                            00000002
INT1IE                            00000003
INT1IF                            00000003
INTE                              0000018A
INTF                              0000018B
IOP0                              00000190
IOP1                              00000194
KBCR                              00000197
KBCR0                             00000000
KBCR1                             00000001
KBCR2                             00000002
KBCR3                             00000003
KBCR4                             00000004
KBCR5                             00000005
KBCR6                             00000006
KBIE                              00000004
KBIF                              00000004
LFEN                              00000001
LVDCR                             000001AF
LVDEN                             00000007
LVDF                              00000000
LVDS0                             00000004
LVDS1                             00000005
LVDS2                             00000006
MCR                               00000188
MINT00                            00000000
MINT01                            00000001
MINT10                            00000002
MINT11                            00000003
OEP0                              00000191
OEP1                              00000195
OSCCAL                            000001FB
OSCCAL0                           00000000
OSCCAL1                           00000001
OSCCAL2                           00000002
OSCCAL3                           00000003
OSCCAL4                           00000004
OSCCAL5                           00000005
OSCCAL6                           00000006
OSCCAL7                           00000007
OSCM                              000001AE
P00ANS                            00000000
P00D                              00000000
P00OE                             00000000
P00PU                             00000000
P01ANS                            00000001
P01D                              00000001
P01OE                             00000001
P01PU                             00000001
P02ANS                            00000002
P02D                              00000002
P02OE                             00000002
P02PU                             00000002
P03ANS                            00000003
P03D                              00000003
P03OE                             00000003
P03PU                             00000003
P04ANS                            00000004
P04D                              00000004
P04OE                             00000004
P04PU                             00000004
P10D                              00000000
P10OE                             00000000
P10PU                             00000000
P11D                              00000001
P11OE                             00000001
P11PU                             00000001
P12ANS                            00000005
P12D                              00000002
P12OE                             00000002
P12PU                             00000002
P13ANS                            00000006
P13D                              00000003
P13OE                             00000003
P13PU                             00000003
P14D                              00000004
P14OE                             00000004
P14PU                             00000004
P15D                              00000005
P15OE                             00000005
P15PU                             00000005
P16D                              00000006
P16OE                             00000006
P16PU                             00000006
PC0                               00000000
PC1                               00000001
PC2                               00000002
PC3                               00000003
PC4                               00000004
PC5                               00000005
PC6                               00000006
PC7                               00000007
PCL                               00000186
PD                                00000004
PFLAG                             00000187
PUP0                              00000192
PUP1                              00000196
PWM0OE                            00000006
PWM1OE                            00000006
STBH                              00000004
STBL                              00000005
STK00                             00000000
STK01                             00000000
STK02                             00000000
STK03                             00000000
STK04                             00000000
STK05                             00000000
STK06                             00000000
T0C0                              00000000
T0C1                              00000001
T0C2                              00000002
T0C3                              00000003
T0C4                              00000004
T0C5                              00000005
T0C6                              00000006
T0C7                              00000007
T0CNT                             000001A1
T0CR                              000001A0
T0DATA                            000001A3
T0DATA0                           00000000
T0DATA1                           00000001
T0DATA2                           00000002
T0DATA3                           00000003
T0DATA4                           00000004
T0DATA5                           00000005
T0DATA6                           00000006
T0DATA7                           00000007
T0IE                              00000000
T0IF                              00000000
T0LOAD                            000001A2
T0LOAD0                           00000000
T0LOAD1                           00000001
T0LOAD2                           00000002
T0LOAD3                           00000003
T0LOAD4                           00000004
T0LOAD5                           00000005
T0LOAD6                           00000006
T0LOAD7                           00000007
T0PR0                             00000000
T0PR1                             00000001
T0PR2                             00000002
T0PTS0                            00000003
T0PTS1                            00000004
T1C0                              00000000
T1C1                              00000001
T1C2                              00000002
T1C3                              00000003
T1C4                              00000004
T1C5                              00000005
T1C6                              00000006
T1C7                              00000007
T1CNT                             000001A5
T1CR                              000001A4
T1DATA                            000001A7
T1DATA0                           00000000
T1DATA1                           00000001
T1DATA2                           00000002
T1DATA3                           00000003
T1DATA4                           00000004
T1DATA5                           00000005
T1DATA6                           00000006
T1DATA7                           00000007
T1IE                              00000001
T1IF                              00000001
T1LOAD                            000001A6
T1LOAD0                           00000000
T1LOAD1                           00000001
T1LOAD2                           00000002
T1LOAD3                           00000003
T1LOAD4                           00000004
T1LOAD5                           00000005
T1LOAD6                           00000006
T1LOAD7                           00000007
T1PR0                             00000000
T1PR1                             00000001
T1PR2                             00000002
T1PTS0                            00000003
T1PTS1                            00000004
TC0EN                             00000007
TC1EN                             00000007
TO                                00000005
VRS0                              00000000
VRS1                              00000001
VRS2                              00000002
Z                                 00000002
_00106_DS_                        0000005E
_00108_DS_                        00000060
_00111_DS_                        00000086
_00112_DS_                        00000087
_00122_DS_                        0000005A
_00123_DS_                        00000082
_CONFIG0                          00008000
_CONFIG1                          00008001
__32P21                           00000001
___fs2schar                       00000000
___fs2sint                        00000000
___fs2slong                       00000000
___fs2uchar                       00000000
___fs2uint                        00000000
___fs2ulong                       00000000
___fsadd                          00000000
___fsdiv                          00000000
___fseq                           00000000
___fsgt                           00000000
___fsgt_fl1_1_22                  00000009
___fsgt_fl2_1_22                  0000000D
___fslt                           00000000
___fsmul                          00000000
___fsneq                          00000000
___fssub                          00000000
___schar2fs                       00000000
___sint2fs                        00000000
___slong2fs                       00000000
___uchar2fs                       00000000
___uint2fs                        00000000
___ulong2fs                       00000000
r0x1008                           00000003
r0x1009                           00000002
r0x100A                           00000001
r0x100B                           00000000
r0x100C                           00000007
r0x100D                           00000006
r0x100E                           00000005
r0x100F                           00000004
r0x1010                           00000008

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

